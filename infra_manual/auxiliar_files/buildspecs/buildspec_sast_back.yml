version: 0.2
phases:
  install:
    commands:
      - echo "install phase....."
  pre_build:
    commands:
      - export SONAR_SCANNER_VERSION=6.0.0.4432
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"
      # - pip install pylint
      - cd /home/
      - wget https://secure.generalsoftwareinc.com/owasp-dependency-check/SCA.tar.gz
      - tar -xvf SCA.tar.gz; rm SCA.tar.gz
      - chmod -R 775 SCA/dependency-check/bin/dependency-check.sh
      - cd $CODEBUILD_SRC_DIR/
  build:
    on-failure: CONTINUE
    commands: 
      - /home/SCA/dependency-check/bin/dependency-check.sh -n --project "Owasp-DC" --format JSON --prettyPrint --enableExperimental --out /home/SCA/ --scan $CODEBUILD_SRC_DIR; EXITCODE=0
      - /home/SCA/dependency-check/bin/dependency-check.sh -n --project "Owasp-DC" --format HTML --prettyPrint --enableExperimental --out /home/SCA/ --scan $CODEBUILD_SRC_DIR; EXITCODE=0
      # - echo "OWASP dependency check analysis status is completed..." 
      # - cd $CODEBUILD_SRC_DIR/
      # - pylint --output-format=parseable ${PYHTON_FILES}/ > output.txt; EXITCODE=0
      - sonar-scanner -Dsonar.projectKey=${SonarProject} -Dsonar.projectName=${SonarProject} -Dsonar.host.url=${SonarURL} -Dsonar.login=${SonarLogin} -Dsonar.dependencyCheck.jsonReportPath=/home/SCA/./dependency-check-report.json -Dsonar.dependencyCheck.htmlReportPath=/home/SCA/./dependency-check-report.html -Dsonar.sources=. -Dsonar.python.pylint.reportPaths=./output.txt
#   post_build:
#     commands:
#       - echo "OK"
# cache:
#  paths:
#    - '/home/SCA/**/*'